pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(results.glm,add=TRUE)
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(Direction)
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(Lag2,Direction)
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(Lag2,Direction)
curve(results)
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(Lag2,Direction)
curve(predict(fit2.glm, newdata=df.test,type="response"),add=TRUE)
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(Lag2,Direction)
lines(Lag2,results.glm)
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(Lag2,Direction)
lines(results.glm)
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(Lag2,Direction)
lines(results)
results
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(Lag2,Direction)
plot(results)
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(Lag2,Direction)
plot(guess2)
n.train=900
n.val <- length(Weekly$Direction)
n.test <- n.val -n.train
inds.train<- sample(1:n.val,n.train)
inds.test <- setdiff(1:n.val, inds.train)
df.tr<- Weekly[inds.train,]
df.test<-Weekly[inds.test,]
fit.glm<-glm(Direction~Lag1+ Lag2+Lag3+Lag4+Lag5+Volume, data=df.tr, family=binomial)
fit2.glm <- glm(Direction~Lag2, data=df.tr,family=binomial)
summary(fit.glm)
summary(fit2.glm) #Only Lag2
guess <- predict(fit.glm, type="response")
guess2<- predict(fit2.glm,type="response")
pred.glm <- rep("Down", length(guess))
pred2.glm<- rep("Down", length(guess2))
pred.glm[guess >.5]<-"Up"
pred2.glm[guess2>.5]<-"Up"
table(pred.glm,df.tr$Direction)
table(pred2.glm,df.tr$Direction)
mean(pred.glm!=df.tr$Direction)
mean(pred2.glm!=df.tr$Direction)
##Now Test data
results <- predict(fit2.glm, newdata=df.test,type="response")
results.glm <- rep("Down", length(results))
results.glm[results>.5]<-"Up"
table(results.glm,df.test$Direction)
mean(results.glm != df.test$Direction)
plot(guess2,ylab="Probabilities")
shiny::runApp('Documents/GitHub/Fall2017-project2-grp7')
setwd("~/Documents/GitHub/fall2017-project5-proj5-grp9/doc")
setwd("/Volumes/Seagate Backup Plus Drive/fall2017-project5-proj5-grp9/doc")
library(warbleR)
dir<-getwd()
dir<-gsub("doc","data/speech-accent-archive/recordings",dir)
mp32wav(from=dir)
waves<-list.files(dir)
dir
waves<-waves[grepl(".wav",waves)]
dir.create("../data/WaveFiles")
file.copy(paste("../data/speech-accent-archilve/recordings/",waves,sep=""),"../data/WaveFiles")
waves
waves<-paste("../data/speech-accent-archilve/recordings/",waves,sep="")
waves
file.copy(waves,"../data/WaveFiles")
getwd()
waves<-list.files(dir)
waves<-waves[grepl(".wav",waves)]
waves<-paste("../data/speech-accent-archive/recordings/",waves,sep="")
file.copy(waves,"../data/WaveFiles")
file.remove(waves)
getwd()
speakerInfo<-read_csv("../data/speech-accent-archive/speakers_all.csv")
library(readr)
library(dplyr)
speakerInfo<-read_csv("../data/speech-accent-archive/speakers_all.csv")
speakerInfo<-speakerInfo[speakerInfo$`file_missing?`==FALSE,]
speakerInfo<-speakerInfo[,1:8]
files<-paste("..data/WaveFiles/",speakerInfo$filename,".wav",sep="")
files
dir
list.files(path="..data/WaveFiles")
list.files(path="..data/WaveFiles/")
getwd()
list.files(path="../data/WaveFiles/")
files<-files[files %in% list.files(path="../data/WaveFiles/")]
files<-paste("..data/WaveFiles/",speakerInfo$filename,".wav",sep="")
files
files<-paste(speakerInfo$filename,".wav",sep="")
files<-files[files %in% list.files(path="../data/WaveFiles/")]
files<-paste("../data/WaveFiles/",files,sep="")
files
stats<-data.frame(
mean=NA,
sd=NA,
median=NA,
sem=NA,
mode=NA,
Q25=NA,
Q75=NA,
IQR=NA,
cent=NA,
skewness=NA,
kurtosis=NA,
sfm=NA,
sh=NA,
prec=NA,
meanfun=NA,
minfun=NA,
maxfun=NA,
meandom=NA,
mindom=NA,
maxdom=NA,
dfrange=NA,
modindx=NA,
file=NA
)
for(i in 1:length(files)){
r<-readWave(files[i])
songspec <- seewave::spec(r, f = r@samp.rate, plot = FALSE)
analysis <- seewave::specprop(songspec, f = r@samp.rate,
flim = c(0, 280/1000), plot = FALSE)
an<-as.data.frame(analysis)
ff <- seewave::fund(r, f = r@samp.rate, ovlp = 50, threshold = 5,
fmax = 280, ylim=c(0, 280/1000), plot = FALSE, wl = 2048)[, 2]
an$meanfun<-mean(ff, na.rm = T)
an$minfun<-min(ff, na.rm = T)
an$maxfun<-max(ff, na.rm = T)
y <- seewave::dfreq(r, f = r@samp.rate, wl = 2048, ylim=c(0, 280/1000), ovlp = 0, plot = F, threshold = 5, fftw = TRUE)[, 2]
an$meandom <- mean(y, na.rm = TRUE)
an$mindom <- min(y, na.rm = TRUE)
an$maxdom <- max(y, na.rm = TRUE)
an$dfrange <- (an$maxdom - an$mindom)
#modulation index calculation
changes <- vector()
for(j in which(!is.na(y))){
change <- abs(y[j] - y[j + 1])
changes <- append(changes, change)
}
if(an$mindom==an$maxdom) an$modindx<-0 else an$modindx <- mean(changes, na.rm = T)/an$dfrange
an$file<-files[i]
stats[i,]<-an
print(i)
}
View(weather)
View(stats)
for(i in 402:length(files)){
r<-readWave(files[i])
songspec <- seewave::spec(r, f = r@samp.rate, plot = FALSE)
analysis <- seewave::specprop(songspec, f = r@samp.rate,
flim = c(0, 280/1000), plot = FALSE)
an<-as.data.frame(analysis)
ff <- seewave::fund(r, f = r@samp.rate, ovlp = 50, threshold = 5,
fmax = 280, ylim=c(0, 280/1000), plot = FALSE, wl = 2048)[, 2]
an$meanfun<-mean(ff, na.rm = T)
an$minfun<-min(ff, na.rm = T)
an$maxfun<-max(ff, na.rm = T)
y <- seewave::dfreq(r, f = r@samp.rate, wl = 2048, ylim=c(0, 280/1000), ovlp = 0, plot = F, threshold = 5, fftw = TRUE)[, 2]
an$meandom <- mean(y, na.rm = TRUE)
an$mindom <- min(y, na.rm = TRUE)
an$maxdom <- max(y, na.rm = TRUE)
an$dfrange <- (an$maxdom - an$mindom)
#modulation index calculation
changes <- vector()
for(j in which(!is.na(y))){
change <- abs(y[j] - y[j + 1])
changes <- append(changes, change)
}
if(an$mindom==an$maxdom) an$modindx<-0 else an$modindx <- mean(changes, na.rm = T)/an$dfrange
an$file<-files[i]
stats[i,]<-an
print(i)
}
getwd()
setwd("/Volumes/Seagate Backup Plus Drive/fall2017-project5-proj5-grp9/doc")
for(i in 402:length(files)){
r<-readWave(files[i])
songspec <- seewave::spec(r, f = r@samp.rate, plot = FALSE)
analysis <- seewave::specprop(songspec, f = r@samp.rate,
flim = c(0, 280/1000), plot = FALSE)
an<-as.data.frame(analysis)
ff <- seewave::fund(r, f = r@samp.rate, ovlp = 50, threshold = 5,
fmax = 280, ylim=c(0, 280/1000), plot = FALSE, wl = 2048)[, 2]
an$meanfun<-mean(ff, na.rm = T)
an$minfun<-min(ff, na.rm = T)
an$maxfun<-max(ff, na.rm = T)
y <- seewave::dfreq(r, f = r@samp.rate, wl = 2048, ylim=c(0, 280/1000), ovlp = 0, plot = F, threshold = 5, fftw = TRUE)[, 2]
an$meandom <- mean(y, na.rm = TRUE)
an$mindom <- min(y, na.rm = TRUE)
an$maxdom <- max(y, na.rm = TRUE)
an$dfrange <- (an$maxdom - an$mindom)
#modulation index calculation
changes <- vector()
for(j in which(!is.na(y))){
change <- abs(y[j] - y[j + 1])
changes <- append(changes, change)
}
if(an$mindom==an$maxdom) an$modindx<-0 else an$modindx <- mean(changes, na.rm = T)/an$dfrange
an$file<-files[i]
stats[i,]<-an
print(i)
}
for(i in 402:length(files)){
r<-readWave(files[i])
songspec <- seewave::spec(r, f = r@samp.rate, plot = FALSE)
analysis <- seewave::specprop(songspec, f = r@samp.rate,
flim = c(0, 280/1000), plot = FALSE)
an<-as.data.frame(analysis)
ff <- seewave::fund(r, f = r@samp.rate, ovlp = 50, threshold = 5,
fmax = 280, ylim=c(0, 280/1000), plot = FALSE, wl = 2048)[, 2]
an$meanfun<-mean(ff, na.rm = T)
an$minfun<-min(ff, na.rm = T)
an$maxfun<-max(ff, na.rm = T)
y <- seewave::dfreq(r, f = r@samp.rate, wl = 2048, ylim=c(0, 280/1000), ovlp = 0, plot = F, threshold = 5, fftw = TRUE)[, 2]
an$meandom <- mean(y, na.rm = TRUE)
an$mindom <- min(y, na.rm = TRUE)
an$maxdom <- max(y, na.rm = TRUE)
an$dfrange <- (an$maxdom - an$mindom)
#modulation index calculation
changes <- vector()
for(j in which(!is.na(y))){
change <- abs(y[j] - y[j + 1])
changes <- append(changes, change)
}
if(an$mindom==an$maxdom) an$modindx<-0 else an$modindx <- mean(changes, na.rm = T)/an$dfrange
an$file<-files[i]
stats[i,]<-an
print(i/length(files))
}
View(speakerInfo)
setwd("~/Documents/GitHub/fall2017-project5-proj5-grp9/data")
write_csv(stats,"features.csv")
stats$file<-gsub("../data/WaveFiles/","",stats$file)
stats$file<-gsub(".wav","",stats$file)
colnames(speakerInfo)[4]<-"file"
library(dplyr)
bigdata<- merge(stats,speakerInfo,by="file",all.x = T)
View(bigdata)
genderdf<-bigdata[,c(1:24,28)]
View(genderdf)
genderdf<-bigdata[,c(1:23,28)]
genderdf<-bigdata[,c(2:23,28)]
write_csv(bigdata,"all_features.csv")
genderdf$sex<-as.factor(genderdf$sex)
train<-round(.75*nrow(genderdf))
train.ind<-sample(1:nrow(genderdf),train)
traindata<-genderdf[train.ind,]
testdata<-genderdf[-train.ind,]
genderSVM<-svm(sex~.,data=traindata)
library(e1071)
genderSVM<-svm(sex~.,data=traindata)
predictSvm <- predict(genderSVM, testdata)
table(predictSvm, testdata$gender)
table(predictSvm, testdata$sex)
231+14+16+273
231+41
30/534
getwd()
save.image("~/Desktop/Workspace125.RData")
