spectro(ex_wave2,f=44100,flim=c(0,3.5),colbg = "lightgray",palette = terrain.colors)
spectro(ex_wave,f=44100,flim=c(0,3.5),tlim=c(0,5),colbg = "lightgray",palette = terrain.colors)
spectro(ex_wave2,f=44100,flim=c(0,3.5),tlim=c(0,5),colbg = "lightgray",palette = terrain.colors)
ex_wave<-readWave("../data/english46.wav")
spectro(ex_wave,f=44100,flim=c(0,3.5),tlim=c(0,5),colbg = "lightgray",palette = terrain.colors)
ex_wave2<-readWave("../data/dutch30.wav")
spectro(ex_wave2,f=44100,flim=c(0,3.5),tlim=c(0,5),colbg = "lightgray",palette = terrain.colors)
osc<-oscillo(ex_wave,from=0,to=5)
osc<-oscillo(ex_wave,from=0,to=5)
osc2<-oscillo(ex_wave2,from=0,to=5)
ex_spec<-spec(ex_wave,main="Spectogram of Speaker with Deep Voice",from=0,to=5)
ex_spec<-spec(ex_wave,main="Spectogram of Speaker with Deep Voice",from=0,to=5,flim=c(0,3.5))
ex_spec2<-spec(ex_wave2,main="Spectogram of Speaker with a High Voice",from=0,to=5,flim=c(0,3.5))
ex_spec2<-spec(ex_wave2,main="Spectogram of Speaker with a High Voice",from=0,to=5,flim=c(0,3.5))
ex_spec<-spec(ex_wave,main="Spectogram of Speaker with Deep Voice",from=0,to=5,flim=c(0,1.5))
ex_spec2<-spec(ex_wave2,main="Spectogram of Speaker with a High Voice",from=0,to=5,flim=c(0,1.5))
analysis<-specprop(ex_wave)
analysis<-specprop(ex_wave,r@samp.rate,plot=F)
analysis<-specprop(ex_spec2,ex_spec@samp.rate,plot=F)
analysis<-specprop(ex_spec2,ex_spec2@samp.rate,plot=F)
analysis<-specprop(ex_spec2,f=ex_spec2@samp.rate,plot=F)
analysis<-specprop(ex_spec2,f=ex_spec2@samp.rate,plot=F,flim=c(0,280/1000))
r<-ex_wave
songspec <- seewave::spec(r, f = r@samp.rate, plot = FALSE)
analysis <- seewave::specprop(songspec, f = r@samp.rate,
flim = c(0, 280/1000), plot = FALSE)
an<-as.data.frame(analysis)
View(an)
analysis <- seewave::specprop(songspec, f = r@samp.rate,
plot = FALSE)
an2<-as.data.frame(analysis)
View(an2)
getwd()
data<-read.csv("../output/all_features")
data<-read.csv("./output/all_features")
data<-read.csv("./output/all_features.csv")
data<-read.csv("../output/all_features.csv")
head(data)
head(data[1:8,])
head(data[18:])
head(data[18:25])
head(data[18:24])
data<-read.csv("../output/all_features.csv")
head(data[1:8,])
head(data[9:17])
head(data[18:24])
head(data[25:30])
head(data[1:6,])
head(data[7:12])
head(data[13:18])
head(data[19:26])
head(data[13:18])
head(data[19:26])
head(data[1:6,])
head(data[7:12])
head(data[19:26])
head(data[19:24])
head(data[19:23])
head(data[24:30])
library(corrplot)
install.packages("corrplot")
library(corrplot)
cor(data[,2:23])
corrplot(c)
c<-cor(data[,2:23])
corrplot(c)
ggplot(data)+geom_histogram(aes(meanfun))
ggplot(data)+geom_histogram(aes(meanfun,fill=sex))
ggplot(data)+geom_histogram(aes(meanfun))
ggplot(data)+geom_histogram(aes(maxfun))
ggplot(data)+geom_histogram(aes(maxfun,fill=sex))
ggplot(data)+geom_histogram(aes(meanfun))
ggplot(data)+geom_histogram(aes(meanfun),bins=60)
ggplot(data)+geom_histogram(aes(meanfun,fill=country),bins=60)
ggplot(data)+geom_histogram(aes(meanfun,fill=country),bins=60)+theme(legend.position="none")
ggplot(data)+geom_histogram(aes(meanfun),bins=60)
ggplot(data)+geom_histogram(aes(meanfun),bins=60,col="teal")
ggplot(data)+geom_histogram(aes(meanfun),bins=60,col="firebrick3")
ggplot(data)+geom_histogram(aes(meanfun),bins=60,fill="firebrick3")
ggplot(data)+geom_histogram(aes(meanfun,fill=sex),bins=60)
data<-read.csv("../output/all_features.csv")
data<-data[(data$age>0),]
data$sex[data$sex=="famale"]<-"female"
head(data[1:6])
head(data[7:12])
head(data[13:18])
head(data[19:23])
head(data[24:30])
c<-cor(data[,2:23])
corrplot(c)
ggplot(data)+geom_histogram(aes(meanfun),bins=60,fill="firebrick3")
ggplot(data)+geom_histogram(aes(meanfun,fill=sex),bins=60)
ggplot(data)+geom_histogram(aes(meanfun),bins=60,fill="green")
library(RColorBrewer)
ggplot(data)+geom_histogram(aes(meanfun,fill=sex),bins=60)+scale_fill_brewer(palette="Set1")
library(e1071) #SVM
SVM.tune<-tune(svm,sex~.,data=traindata,
ranges = list(gamma = c(0,.01,.02,.03,.04), cost = 2^(-1:2)))
traindata<-genderdf[train.ind,]
genderdf<-bigdata[,c(2:23,28)]
View(data)
genderdf<-data[,c(2:23,28)]
View(genderdf)
genderdf<-data[,c(2:23,28)]
genderdf$sex<-as.factor(genderdf$sex)
train<-round(.75*nrow(genderdf))
train.ind<-sample(1:nrow(genderdf),train)
traindata<-genderdf[train.ind,]
testdata<-genderdf[-train.ind,]
genderSVM<-svm(sex~.,data=traindata)
#TrainTest
predictSvm <- predict(genderSVM, testdata)
table(predictSvm, testdata$sex)
SVM.tune<-tune(svm,sex~.,data=traindata,
ranges = list(gamma = c(0,.01,.02,.03,.04), cost = 2^(-1:2)))
SVM.tune
genderSVM<-svm(sex~.,data=traindata,gamma=.02,cost=2)
predictSvm <- predict(genderSVM, testdata)
table(predictSvm, testdata$sex)
sum(predictSvm ==testdata$sex)/nrow(testdata$sex)
sum(predictSvm ==testdata$sex)/nrow(testdata$sex)
sum(predictSvm ==testdata$sex)
nrow(testdata$sex)
sum(predictSvm ==testdata$sex)/length(testdata$sex)
predictSvm <- predict(genderSVM, testdata)
table(predictSvm, testdata$sex)
sum(predictSvm ==testdata$sex)/length(testdata$sex)
View(data)
countrydf<-data[2:23,30]
countrydf<-data[2:23,30]
countrydf<-data[,c(2:23,30)]
countrydf$country<-as.factor(countrydf$country)
SVM.tune<-tune(svm,country~.,data=traindata,
ranges = list(gamma = c(0,.01,.02,.03,.04), cost = 2^(-1:2)))
countrydf<-data[,c(2:23,30)]
countrydf$country<-as.factor(countrydf$country)
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
SVM.tune<-tune(svm,country~.,data=traindata,
ranges = list(gamma = c(0,.01,.02,.03,.04), cost = 2^(-1:2)))
countrySVM<-svm(country~.,data=traindata,)
countrySVM<-svm(country~.,data=traindata)
predictSvm <- predict(countrySVM, testdata)
table(predictSvm, testdata$sex)
length(predictSvm)
length(testdata$country)
table(predictSvm, testdata$country)
predictSvm
scaledf<-scale(data[,2:23])
View(scaledf)
View(scaledf)
d<-as.matrix(cbind(scaleddf,data$country))
d<-as.matrix(cbind(scaledf,data$country))
di<-dist(d)
di
test<-as.data.frame(di)
hc<-hclust(di)
plot(hc)
pdf("hctest.pdf")
plot(hc)
dev.off()
dev.off()
pdf("hctest.pdf")
plot(hc)
dev.off()
pdf("hctest.pdf")
plot(hc)
dev.off()
pdf("hctest.pdf")
plot(hc)
dev.off()
dev.off()
plot(hc)
hcd<-hclust(di)
plot(cut(hcd, h=75)$upper,
main="Upper tree of cut at h=75")
hc<-hclust(di)
hcd<-as.dendrogram(hc)
plot(cut(hcd, h=75)$upper,
main="Upper tree of cut at h=75")
plot(hc)
plot(cut(hcd, h=5)$upper,
main="Upper tree of cut at h=75")
str(data$country)
plot(cut(hcd, h=20)$lower[[2]],
main="Second branch of lower tree with cut at h=75")
plot(cut(hcd, h=5)$upper,
main="Upper tree of cut at h=75")
plot(cut(hcd, h=100)$upper,
main="Upper tree of cut at h=75")
plot(cut(hcd, h=100),
main="Upper tree of cut at h=75")
plot(cut(hcd, h=100)$lower,
main="Upper tree of cut at h=75")
plot(cut(hcd, h=120)$upper,
main="Upper tree of cut at h=75")
plot(hc)
plot(cut(hcd, h=120)$upper,
main="Upper tree of cut at h=75")
plot(cut(hcd, h=12)$upper,
main="Upper tree of cut at h=75")
plot(cut(hcd, h=4)$upper,
main="Upper tree of cut at h=75")
plot(cut(hcd, h=20)$lower[[2]],
main="Second branch of lower tree with cut at h=75")
table(data$country)
mean(table(data$country))
sort(table(data$country))
tb<-sort(table(data$country),decreasing = T)
tb[1:20]
tb[1:30]
sum(tb[1:30])
sum(tb$names[1:30])
(tb$names[1:30])
(tb[1:30])
countrydf<-data[data$country %in% names(tb[1:30]),]
scaledf<-scale(countrydf[,2:23])
d<-as.matrix(cbind(scaledf,countrydf$country))
di<-dist(d)
hc<-hclust(di)
plot(hc)
rownames(countrydf)<-countrydf$country
scaledf<-scale(countrydf[,2:23])
d<-as.matrix(cbind(scaledf,countrydf$country))
di<-dist(d)
hc<-hclust(di)
clustercut<-cutree(hc,30)
hcd<-as.dendrogram(hc)
plot(clustercut)
table(clustercut,countrydf$country)
countrydf$country<-as.factor(countrydf$country)
d<-as.matrix(cbind(scaledf))
di<-dist(d)
hc<-hclust(di)
clustercut<-cutree(hc,30)
table(clustercut,countrydf$country)
tb<-sort(table(data$country),decreasing = T)
countrydf<-data[data$country %in% names(tb[1:8]),]
countrydf$country<-as.factor(countrydf$country)
scaledf<-scale(countrydf[,2:23])
d<-as.matrix(cbind(scaledf))
di<-dist(d)
hc<-hclust(di)
plot(hc)
clustercut<-cutree(hc,30)
clustercut<-cutree(hc,8)
table(clustercut,countrydf$country)
countrydf$country<-droplevels(countrydf$country)
scaledf<-scale(countrydf[,2:23])
d<-as.matrix(cbind(scaledf))
di<-dist(d)
hc<-hclust(di)
clustercut<-cutree(hc,8)
table(clustercut,countrydf$country)
tb<-sort(table(data$country),decreasing = T)
countrydf<-data[data$country %in% names(tb[1:3]),]
countrydf$country<-droplevels(countrydf$country)
scaledf<-scale(countrydf[,2:23])
d<-as.matrix(cbind(scaledf))
di<-dist(d)
hc<-hclust(di)
clustercut<-cutree(hc,8)
table(clustercut,countrydf$country)
clustercut<-cutree(hc,3)
table(clustercut,countrydf$country)
clustercut<-cutree(hc,2)
table(clustercut,countrydf$sex)
tb<-sort(table(data$country),decreasing = T)
countrydf<-data[data$country %in% names(tb[1:3]),]
countrydf$country<-droplevels(countrydf$country)
scaledf<-scale(countrydf[,2:23])
d<-as.matrix(cbind(scaledf))
di<-dist(d)
hc<-hclust(di)
clustercut<-cutree(hc,3)
table(clustercut,countrydf$sex)
tb<-sort(table(data$country),decreasing = T)
countrydf<-data[data$country %in% names(tb[1:3]),]
countrydf$country<-droplevels(countrydf$country)
countrydf<-data[data$country %in% names(tb[1:5]),]
countrydf$country<-droplevels(countrydf$country)
scaledf<-scale(countrydf[,2:23])
kcountry<-kmeans(scaledf,5)
View(countrydf)
kcountry
table(kcountry,countrydf$country)
table(kcountry[1],countrydf$country)
table(kcountry$cluster,countrydf$country)
table(countrydf$sex)
countrydf<-data[data$country %in% names(tb[1:5]) & data$sex=="male",]
countrydf$country<-droplevels(countrydf$country)
scaledf<-scale(countrydf[,2:23])
kcountry<-kmeans(scaledf,5)
table(kcountry$cluster,countrydf$country)
countrydf<-data[data$country %in% names(tb[1:2]) ,]
countrydf$country<-droplevels(countrydf$country)
kcountry<-kmeans(scaledf,2)
table(kcountry$cluster,countrydf$country)
countrydf<-data[data$country %in% names(tb[1:2]) ,]
countrydf$country<-droplevels(countrydf$country)
scaledf<-scale(countrydf[,2:23])
kcountry<-kmeans(scaledf,2)
table(kcountry$cluster,countrydf$country)
countrydf<-data[data$country %in% names(tb[1:2]) & data$sex=="male",]
countrydf$country<-droplevels(countrydf$country)
scaledf<-scale(countrydf[,2:23])
kcountry<-kmeans(scaledf,2)
table(kcountry$cluster,countrydf$country)
d<-as.matrix(cbind(scaledf))
di<-dist(d)
hc<-hclust(di)
clustercut<-cutree(hc,2)
table(clustercut,countrydf$country)
clustercut<-cutree(hc,4)
table(clustercut,countrydf$country)
countrydf<-data[data$country %in% names(tb[1:2]) & data$sex=="female",]
countrydf$country<-droplevels(countrydf$country)
scaledf<-scale(countrydf[,2:23])
kcountry<-kmeans(scaledf,2)
kcountry<-kmeans(scaledf,2)
scaledf<-scale(countrydf[,2:23])
kcountry<-kmeans(scaledf,2)
tb<-sort(table(data$country),decreasing = T)
countrydf<-data[data$country %in% names(tb[1:2]) & data$sex=="female",]
scaledf<-scale(countrydf[,2:23])
View(scaledf)
kcountry<-kmeans(scaledf,2)
countrydf<-data[data$country %in% names(tb[1:2]) & data$sex=="female",]
View(countrydf)
scaledf<-scale(countrydf[,2:19,20:23])
kcountry<-kmeans(scaledf,2)
table(kcountry$cluster,countrydf$country)
tb<-sort(table(data$country),decreasing = T)
countrydf<-data[data$country %in% names(tb[1:2]) & data$sex=="female",]
countrydf$country<-droplevels(countrydf$country)
scaledf<-scale(countrydf[,2:19,20:23])
kcountry<-kmeans(scaledf,2)
table(kcountry$cluster,countrydf$country)
hist(countrydf$age)
library(caret) # test result etc
View(scaledf)
genderSVM$x.scale
summary(genderSVM)
genderSVM
genderSVM$coef0
View(data)
library(corrplot)
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
countrydf<-data[,c(2:23,30)]
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
countrySVM<-svm(country~.,data=traindata)
predictSvm <- predict(countrySVM, testdata)
table(predictSvm, testdata$country)
countrydf<-data[,c(2:23,30)]
countrydf$country<-as.factor(countrydf$country)
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
countrySVM<-svm(country~.,data=traindata)
countrySVM<-svm(country~.,data=traindata)
predictSvm <- predict(countrySVM, testdata)
table(predictSvm, testdata$country)
countrydf<-data[,c(2:23,30)]
tb<-sort(table(data$country),decreasing = T)
countrydf<-data[data$country %in% names(tb[1:3]),]
countrydf$country<-droplevels(countrydf$country)
countrydf$country<-as.factor(countrydf$country)
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
countrySVM<-svm(country~.,data=traindata)
predictSvm <- predict(countrySVM, testdata)
table(predictSvm, testdata$country)
predictSvm
SVM.tune<-tune(svm,country~.,data=traindata,
ranges = list(gamma = c(0,.01,.02,.03,.04), cost = 2^(-1:2)))
countrydf<-data[,c(2:19,21:23,30)]
tb<-sort(table(data$country),decreasing = T)
countrydf<-data[data$country %in% names(tb[1:3]),]
countrydf$country<-droplevels(countrydf$country)
countrydf$country<-as.factor(countrydf$country)
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
countrySVM<-svm(country~.,data=traindata)
countrydf<-data[,c(2:19,21:23,30)]
View(countrydf)
countrydf<-data[,c(2:19,21:23,30)]
View(countrydf)
tb<-sort(table(data$country),decreasing = T)
countrydf<-data[data$country %in% names(tb[1:3]),]
countrydf$country<-droplevels(countrydf$country)
countrydf$country<-as.factor(countrydf$country)
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
countrySVM<-svm(country~.,data=traindata)
countrydf<-data[,c(2:19,21:23,30)]
tb<-sort(table(data$country),decreasing = T)
countrydf<-countrydf[data$country %in% names(tb[1:3]),]
countrydf$country<-droplevels(countrydf$country)
countrydf$country<-as.factor(countrydf$country)
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
countrySVM<-svm(country~.,data=traindata)
predictSvm <- predict(countrySVM, testdata)
table(predictSvm, testdata$country)
sum(predictSvm ==testdata$sex)/length(testdata$sex)
sum(predictSvm ==testdata$country)/length(testdata$country)
SVM.tune<-tune(svm,country~.,data=traindata,
ranges = list(gamma = c(0,.01,.02,.03,.04), cost = 2^(-1:2)))
SVM.tune
SVM.tune<-tune(svm,country~.,data=traindata,
ranges = list(gamma = c(0,.01,.02,.03,.04), cost = 2^(2:4)))
SVM.tune
countrySVM<-svm(country~.,data=traindata,gamma=.02,cost=4)
predictSvm <- predict(countrySVM, testdata)
table(predictSvm, testdata$country)
countrydf<-countrydf[data$country %in% names(tb[1:5]),]
countrydf$country<-droplevels(countrydf$country)
countrydf$country<-as.factor(countrydf$country)
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
countrySVM<-svm(country~.,data=traindata,gamma=.02,cost=4)
predictSvm <- predict(countrySVM, testdata)
table(predictSvm, testdata$country)
countrydf<-data[,c(2:19,21:23,30)]
tb<-sort(table(data$country),decreasing = T)
countrydf<-countrydf[data$country %in% names(tb[1:5]),]
countrydf$country<-droplevels(countrydf$country)
countrydf$country<-as.factor(countrydf$country)
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
countrySVM<-svm(country~.,data=traindata,gamma=.02,cost=4)
predictSvm <- predict(countrySVM, testdata)
table(predictSvm, testdata$country)
countrydf<-data[,c(2:19,21:23,30)]
tb<-sort(table(data$country),decreasing = T)
countrydf<-countrydf[data$country %in% names(tb[1:10]),]
countrydf$country<-droplevels(countrydf$country)
countrydf$country<-as.factor(countrydf$country)
train<-round(.75*nrow(countrydf))
train.ind<-sample(1:nrow(countrydf),train)
traindata<-countrydf[train.ind,]
testdata<-countrydf[-train.ind,]
countrySVM<-svm(country~.,data=traindata,gamma=.02,cost=4)
predictSvm <- predict(countrySVM, testdata)
table(predictSvm, testdata$country)
control<-trainControl(method="repeatedcv",number = 10, repeats = 3)
genderdf<-data[,c(2:23,28)]
View(genderdf)
gender_df[,-23]<-scale(gender_df[,-23])
genderdf[,-23]<-scale(genderdf[,-23])
control<-trainControl(method="repeatedcv",number = 10, repeats = 3)
model<-train(sex~.,data=genderdf,method="lvq", preProcess="scale", trControl=control)
genderdf$sex<-droplevels(genderdf$sex)
model<-train(sex~.,data=genderdf,method="lvq", preProcess="scale", trControl=control)
importance<-(varImp(model,scale=F))
print(importance)
plot(importance)
View(countrydf)
model<-train(country~.,data=countrydf,method="lvq", preProcess="scale", trControl=control)
importance<-(varImp(model,scale=F))
print(importance)
plot(importance)
control <- rfeControl(functions=rfFuncs, method="cv", number=10)
results <- rfe(country~.,data=countrydf, sizes=c(1:8), rfeControl=control)
print(results)
predictors(results)
results <- rfe(sex~.,data=genderdf, sizes=c(1:8), rfeControl=control)
print(results)
checkCountry<-cbind(countrydf$median,countrydf$prec,countrydf$sem,
countrydf$modindx,countrydf$sfm,countrydf$mode)
library(rpart)
checkCountry<-cbind(checkCountry,countrydf$country)
traindata<-checkCountry[train.ind,]
testdata<-checkCountry[-train.ind,]
countrySVM<-svm(country~.,data=traindata,gamma=.02,cost=4)
View(countrydf)
train.ind<-sample(1:nrow(countrydf),train)
traindata<-checkCountry[train.ind,]
testdata<-checkCountry[-train.ind,]
countrySVM<-svm(country~.,data=traindata,gamma=.02,cost=4)
View(traindata)
View(checkCountry)
countrySVM<-svm(V7~.,data=traindata,gamma=.02,cost=4)
predictSvm <- predict(countrySVM, testdata)
traindata<-checkCountry[train.ind,]
testdata<-checkCountry[-train.ind,]
View(traindata)
countrySVM<-svm(y=as.factor(checkCountry[,7],
x=checkCountry[,-7]),data=traindata,gamma=.02,cost=4)
countrySVM<-svm(y=as.factor(checkCountry[,7]),
x=checkCountry[,-7],data=traindata,gamma=.02,cost=4)
predictSvm <- predict(countrySVM, testdata)
